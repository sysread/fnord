name: Run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Install system packages needed by tests
    - name: Install ripgrep
      run: |
        sudo apt-get update
        sudo apt-get remove -y man-db || true # to avoid rebuilding manpages after installing ripgrep
        sudo apt-get install --no-install-recommends -y ripgrep

    - name: Setup elixir
      uses: erlef/setup-beam@v1
      id: setup-elixir
      with:
        elixir-version: '1.18'
        otp-version: '27.2.2'  # latest OTP supported by Elixir 1.18

    - name: Restore dependencies cache
      id: deps-cache-restore
      uses: actions/cache@v4
      with:
        path: deps
        key: deps-cache-${{ runner.os }}-${{ hashFiles('mix.lock') }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}

    - name: Restore build cache
      id: build-cache-restore
      uses: actions/cache@v4
      with:
        path: _build
        key: build-cache-${{ runner.os }}-${{ hashFiles('mix.lock') }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}

    - name: Install dependencies
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get

    - name: Compile
      run: MIX_ENV=test mix compile

    - name: Run tests
      run: MIX_ENV=test mix test

    - name: Run dialyzer
      run: MIX_ENV=dev mix dialyzer

    - name: Save dependencies cache
      if: steps.deps-cache-restore.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: deps
        key: deps-cache-${{ runner.os }}-${{ hashFiles('mix.lock') }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}

    - name: Save build cache
      if: steps.build-cache-restore.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: _build
        key: build-cache-${{ runner.os }}-${{ hashFiles('mix.lock') }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}
