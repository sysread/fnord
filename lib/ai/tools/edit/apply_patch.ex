defmodule AI.Tools.Edit.ApplyPatch do
  @behaviour AI.Tools

  @impl AI.Tools
  def is_available?, do: true

  @impl AI.Tools
  def ui_note_on_request(%{"file" => file, "patch" => patch}) do
    {"Applying patch to #{file}", patch}
  end

  @impl AI.Tools
  def ui_note_on_result(%{"file" => file}, result) do
    {"Patch applied to #{file}", result}
  end

  @impl AI.Tools
  def read_args(args), do: {:ok, args}

  @impl AI.Tools
  def spec do
    %{
      type: "function",
      function: %{
        name: "apply_patch",
        description: """
        This tool applies a patch to a file. The patch must be exactly as
        generated by the make_patch tool. It will replace the specified section
        of the file with the new code provided in the patch.

        The original file will be modified in place, but a backup will be
        created with the extension `.bak` before applying the patch.
        """,
        parameters: %{
          type: "object",
          required: ["file", "patch"],
          properties: %{
            file: %{
              type: "string",
              description: """
              The file to edit. It must be the complete path provided by the
              file_search_tool or file_list_tool.
              """
            },
            patch: %{
              type: "string",
              description: """
              The patch to apply to the file. This should be a valid patch format,
              exactly as provided by the make_patch tool.
              """
            }
          }
        }
      }
    }
  end

  @impl AI.Tools
  def call(%{"file" => file, "patch" => patch}) do
    with {:ok, project} <- Store.get_project(),
         {:ok, path} <- Store.Project.find_file(project, file),
         :ok <- File.cp(path, "#{path}.bak"),
         {:ok, temp_file} <- Briefly.create(extname: ".patch"),
         :ok <- File.write(temp_file, patch),
         {output, 0} <- System.cmd("patch", [file, "-i", temp_file]) do
      {:ok,
       """
       The patch was successfully applied to `#{file}`.
       A backup of the original file has been created at `#{file}.bak`.
       Here is the output from the patch command:
       ```
       #{output}
       ```
       """}
    end
  end
end
